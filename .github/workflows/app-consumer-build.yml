name: 📦 App Consumer Build

on:
  push:
    branches: [main]
    paths: ['src/app/consumer/**']
  workflow_dispatch:

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  APPLICATION_NAME: ${{ vars.APPLICATION_NAME }}
  ENVIRONMENT_NAME: ${{ vars.ENVIRONMENT_NAME }}
  CONSUMER_REPOSITORY: ${{ vars.CONSUMER_REPOSITORY }}
  NODE_VERSION: '20'
  EVENT_TYPE: "app-consumer-event"

jobs:
  build-and-push:
    name: 🏗️ Build & Push Consumer App
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        working-directory: ./src/app/consumer
    outputs:
      consumer_image_tag: ${{ steps.build.outputs.consumer_image_tag }}
    
    steps:
      - name: 📥 Checkout Source Code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: src/app/consumer/package-lock.json

      - name: 📚 Install Dependencies & Run Tests
        run: |
          npm ci
          npm test || echo "⚠️ No tests found - skipping"

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔑 Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: 🐳 Build & Push Docker Image
        id: build
        run: |
          SHORT_SHA=${GITHUB_SHA:0:7}
          AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_REGISTRY="${AWS_ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com"
          IMAGE_TAG="${ECR_REGISTRY}/ecr-${{ env.APPLICATION_NAME }}-${{ env.ENVIRONMENT_NAME }}-${{ env.CONSUMER_REPOSITORY }}:${SHORT_SHA}"
          
          echo "🔨 Building and pushing image: $IMAGE_TAG"

          docker build . -t $IMAGE_TAG
          docker push $IMAGE_TAG
          
          echo "🚀 Successfully pushed: $IMAGE_TAG"

          echo "consumer_image=$IMAGE_TAG" >> "$GITHUB_OUTPUT"
          echo "consumer_image_tag=$SHORT_SHA" >> "$GITHUB_OUTPUT"

      - name: Pass the Final Image Tag (via repository_dispatch)
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GHP_TOKEN }}
          event-type: ${{ env.EVENT_TYPE }}
          client-payload: |
            {
              "ref": "${{ github.ref }}",
              "sha": "${{ github.sha }}",
              "consumer_image_tag": "${{ steps.build.outputs.consumer_image_tag }}"
            }

      - name: 📋 Build Summary
        run: |
          echo "🎉 Build completed successfully!"
          echo "📦 Image: ${{ steps.build.outputs.consumer_image }}"